cmake_minimum_required(VERSION 3.5.1)

project(chat)

set(CMAKE_CXX_STANDARD 14)

find_package(Threads REQUIRED)
find_package(protobuf CONFIG REQUIRED)
find_package(gRPC CONFIG REQUIRED)

include_directories(${CMAKE_CURRENT_BINARY_DIR})

get_filename_component(PROTO_PATH "./" ABSOLUTE)
get_filename_component(PROTO_NAME "chat.proto" ABSOLUTE)
set(PROTO_SRC "${CMAKE_CURRENT_BINARY_DIR}/chat.pb.cc")
set(PROTO_HDR "${CMAKE_CURRENT_BINARY_DIR}/chat.pb.h")
set(GRPC_SRC "${CMAKE_CURRENT_BINARY_DIR}/chat.grpc.pb.cc")
set(GRPC_HDR "${CMAKE_CURRENT_BINARY_DIR}/chat.grpc.pb.h")

message("Running protoc command...")

execute_process(
    COMMAND ${PROTOBUF_PROTOC_EXECUTABLE} --grpc_out ${CMAKE_CURRENT_BINARY_DIR} --cpp_out ${CMAKE_CURRENT_BINARY_DIR} -I ${PROTO_PATH} --plugin=protoc-gen-grpc=/bin/grpc_cpp_plugin ${PROTO_NAME}
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    RESULT_VARIABLE PROTOC_RESULT
    OUTPUT_VARIABLE PROTOC_OUTPUT
    ERROR_VARIABLE PROTOC_ERROR)

message("protoc result: ${PROTOC_RESULT}")
message("protoc output: ${PROTOC_OUTPUT}")
message("protoc error: ${PROTOC_ERROR}")

include_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(chat_server server.cpp ${PROTO_SRC} ${GRPC_SRC})
target_link_libraries(chat_server gRPC::grpc++ gRPC::grpc++_reflection protobuf::libprotobuf)

add_executable(chat_client client.cpp ${PROTO_SRC} ${GRPC_SRC})
target_link_libraries(chat_client gRPC::grpc++ gRPC::grpc++_reflection protobuf::libprotobuf)
